// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvShowAPI.Data;

namespace TvShowAPI.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20220901160859_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActorEpisode", b =>
                {
                    b.Property<int>("ActorsID")
                        .HasColumnType("int");

                    b.Property<int>("EpisodesID")
                        .HasColumnType("int");

                    b.HasKey("ActorsID", "EpisodesID");

                    b.HasIndex("EpisodesID");

                    b.ToTable("ActorEpisode");
                });

            modelBuilder.Entity("ActorSerie", b =>
                {
                    b.Property<int>("ActorsID")
                        .HasColumnType("int");

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.HasKey("ActorsID", "SeriesID");

                    b.HasIndex("SeriesID");

                    b.ToTable("ActorSerie");
                });

            modelBuilder.Entity("TvShowAPI.Models.Actor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date_Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("TvShowAPI.Models.Episode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Air_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Episode_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Episode_Number")
                        .HasColumnType("int");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<int>("SerieId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SerieId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("TvShowAPI.Models.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SerieID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("TvShowAPI.Models.Serie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Network")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("ActorEpisode", b =>
                {
                    b.HasOne("TvShowAPI.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TvShowAPI.Models.Episode", null)
                        .WithMany()
                        .HasForeignKey("EpisodesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ActorSerie", b =>
                {
                    b.HasOne("TvShowAPI.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TvShowAPI.Models.Serie", null)
                        .WithMany()
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TvShowAPI.Models.Episode", b =>
                {
                    b.HasOne("TvShowAPI.Models.Serie", null)
                        .WithMany("Episodes")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TvShowAPI.Models.Genre", b =>
                {
                    b.HasOne("TvShowAPI.Models.Serie", null)
                        .WithMany("Genre")
                        .HasForeignKey("SerieID");
                });

            modelBuilder.Entity("TvShowAPI.Models.Serie", b =>
                {
                    b.Navigation("Episodes");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
